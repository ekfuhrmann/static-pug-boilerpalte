@use '../abstracts/variables';
@use '../abstracts/mixins';

// TODO: https://codyhouse.co/blog/post/css-custom-properties-vs-sass-variables

// https://codyhouse.co/blog/post/how-to-combine-sass-color-functions-and-css-variables

// Consider using a space unit

:root {
  --nav-height: #{variables.$nav-height}
  --gap: #{variables.$grid-gap};
  --spacing: clamp(
    #{variables.$spacing * 0.25},
    calc(1rem + 3vw),
    #{variables.$spacing}
  );
  --border-radius: #{variables.$border-radius};

  color-scheme: light dark;

  // dark theme
  @media (prefers-color-scheme: dark) {
    --background: #{variables.$martinique};
    --primary-text: #{variables.$athens-gray};
    --tag-background: #{variables.$sunglow};
    --tag-text: #{variables.$martinique};
  }

  // light theme
  @media (prefers-color-scheme: dark) {
    --background: #{variables.$sunglow};
    --primary-text: #{variables.$martinique};
    --tag-background: #{variables.$martinique};
    --tag-text: $athens-gray;
  }
}

html {
  min-width: 320px;
  box-sizing: border-box; // default to border-box
  font-size: 62.5%; // convert 1rem = 10px
  line-height: 1.5;
  overflow-x: hidden;
}

// box-sizing inherited throughout
*,
*::before,
*::after {
  box-sizing: inherit;
}

// no unexpected spacing
* {
  padding: 0;
  margin: 0;
}

// set default font size
body {
  @include mixins.is-flex(center, center);
  @include mixins.wrapper;

  min-height: 100vh;
  background-color: var(--background);
  color: var(--text-primary);
  font-size: 1.6rem; // 1.6rem = 16px
}

// prevents annoying line-height gaps
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

// maintains good responsive constraints for typography
p,
h1,
h2,
h3,
h4,
h5,
h6,
li,
blockquote {
  hyphens: auto;
  overflow-wrap: break-word;
}

// hides inline spritesheet generated for SVGs
.svg__spritesheet {
  display: none;
}
